syntax = "proto3";

package orders.services.grpc;

service OrdersService {
	rpc sponsorPackage(Order) returns (Acknowledge) {}
}
message Acknowledge {
  bool status = 1;
  string message = 2;
  string created_at = 3;
}
message Id {
  int64 id = 1;
}

enum OrderPlans {
  ORDER_PLAN_PURCHASE = 0;
  ORDER_PLAN_START = 1;
  ORDER_PLAN_SPECIAL = 2;
  ORDER_PLAN_COMPANY = 3;
  ORDER_PLAN_START_50 = 4;
  ORDER_PLAN_START_75 = 5;
}


message Order {
  int64 id = 1;
  int64  user_id = 2;
  int64  from_user_id = 3;
  double  total_cost_in_pf = 4;
  double  packages_cost_in_pf = 5;
  double  registration_fee_in_pf = 6;
  string  is_paid_at = 7;
  string  is_resolved_at = 8;
  string  is_refund_at = 9;
  int64  validity_in_days = 10;
  string  is_commission_resolved_at = 11;
  string  payment_type = 12;
  string  payment_currency = 13;
  string  payment_driver = 14;
  OrderPlans  plan = 15;

  string deleted_at = 16;
  string created_at = 17;
  string updated_at = 18;
  int64  package_id = 19;

  int64 attach_user_id = 20;
  int64 attach_user_position = 21;

}